networks:
  notebook:
    driver: bridge

services:

  php:
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        USER: worker
        UID: 1000
    #    DOCKER_PHP_VERSION: '8.2'
        TZ: ${WORKSPACE_TIMEZONE}
    #image: php:8.2.1-fpm-alpine
    container_name: notebook-php
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./.ssh:/home/www-data/.ssh
      - ./projects:/var/www
      - ./php/php.ini:/usr/local/etc/php/php.ini
      - ./php/supervisor.d:/etc/supervisor.d
    ports:
      - "${PHP_PORT}:9000"
    networks:
      - notebook

  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password --skip_name_resolve
    container_name: notebook-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USERNAME}
      TZ: ${WORKSPACE_TIMEZONE}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/conf.d:/etc/mysql/conf.d
      - ./mysql/logs:/var/log/mysql
      - ./mysql/dump:/dump
      - ./mysql/entrypoint:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    security_opt:
      - seccomp:unconfined
    networks:
      - notebook

  nginx:
    image: nginx:stable-alpine
    container_name: notebook-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./projects:/var/www
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
    environment:
      TZ: ${WORKSPACE_TIMEZONE}
    networks:
      - notebook
